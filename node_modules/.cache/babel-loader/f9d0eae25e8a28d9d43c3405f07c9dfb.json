{"ast":null,"code":"'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\nimport throttle from './throttle.js';\nimport speedometer from './speedometer.js';\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform {\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n    const self = this;\n    const internals = this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    const _speedometer = speedometer(internals.ticksRate * options.samplesCount, internals.timeWindow);\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n    let bytesNotified = 0;\n    internals.updateProgress = throttle(function throttledHandler() {\n      const totalBytes = internals.length;\n      const bytesTransferred = internals.bytesSeen;\n      const progressBytes = bytesTransferred - bytesNotified;\n      if (!progressBytes || self.destroyed) return;\n\n      const rate = _speedometer(progressBytes);\n\n      bytesNotified = bytesTransferred;\n      process.nextTick(() => {\n        self.emit('progress', {\n          loaded: bytesTransferred,\n          total: totalBytes,\n          progress: totalBytes ? bytesTransferred / totalBytes : undefined,\n          bytes: progressBytes,\n          rate: rate ? rate : undefined,\n          estimated: rate && totalBytes && bytesTransferred <= totalBytes ? (totalBytes - bytesTransferred) / rate : undefined,\n          lengthComputable: totalBytes != null\n        });\n      });\n    }, internals.ticksRate);\n\n    const onFinish = () => {\n      internals.updateProgress.call(true);\n    };\n\n    this.once('end', onFinish);\n    this.once('error', onFinish);\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const self = this;\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n    const readableHighWaterMark = this.readableHighWaterMark;\n    const timeWindow = internals.timeWindow;\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = maxRate / divider;\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    function pushChunk(_chunk, _callback) {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      if (internals.isCaptured) {\n        internals.updateProgress();\n      }\n\n      if (self.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = now - internals.ts) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && chunkSize - maxChunkSize > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n\n  setLength(length) {\n    this[kInternals].length = +length;\n    return this;\n  }\n\n}\n\nexport default AxiosTransformStream;","map":{"version":3,"names":["stream","utils","throttle","speedometer","kInternals","Symbol","AxiosTransformStream","Transform","constructor","options","toFlatObject","maxRate","chunkSize","minChunkSize","timeWindow","ticksRate","samplesCount","prop","source","isUndefined","readableHighWaterMark","self","internals","length","bytesSeen","isCaptured","notifiedBytesLoaded","ts","Date","now","bytes","onReadCallback","_speedometer","on","event","bytesNotified","updateProgress","throttledHandler","totalBytes","bytesTransferred","progressBytes","destroyed","rate","process","nextTick","emit","loaded","total","progress","undefined","estimated","lengthComputable","onFinish","call","once","_read","size","_transform","chunk","encoding","callback","divider","bytesThreshold","Math","max","pushChunk","_chunk","_callback","Buffer","byteLength","push","transformChunk","chunkRemainder","maxChunkSize","bytesLeft","passed","setTimeout","subarray","transformNextChunk","err","setLength"],"sources":["D:/project/printshop/node_modules/axios/lib/helpers/AxiosTransformStream.js"],"sourcesContent":["'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\nimport throttle from './throttle.js';\nimport speedometer from './speedometer.js';\n\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform{\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const self = this;\n\n    const internals = this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    const _speedometer = speedometer(internals.ticksRate * options.samplesCount, internals.timeWindow);\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n\n    let bytesNotified = 0;\n\n    internals.updateProgress = throttle(function throttledHandler() {\n      const totalBytes = internals.length;\n      const bytesTransferred = internals.bytesSeen;\n      const progressBytes = bytesTransferred - bytesNotified;\n      if (!progressBytes || self.destroyed) return;\n\n      const rate = _speedometer(progressBytes);\n\n      bytesNotified = bytesTransferred;\n\n      process.nextTick(() => {\n        self.emit('progress', {\n          loaded: bytesTransferred,\n          total: totalBytes,\n          progress: totalBytes ? (bytesTransferred / totalBytes) : undefined,\n          bytes: progressBytes,\n          rate: rate ? rate : undefined,\n          estimated: rate && totalBytes && bytesTransferred <= totalBytes ?\n            (totalBytes - bytesTransferred) / rate : undefined,\n          lengthComputable: totalBytes != null\n        });\n      });\n    }, internals.ticksRate);\n\n    const onFinish = () => {\n      internals.updateProgress.call(true);\n    };\n\n    this.once('end', onFinish);\n    this.once('error', onFinish);\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const self = this;\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    function pushChunk(_chunk, _callback) {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      if (internals.isCaptured) {\n        internals.updateProgress();\n      }\n\n      if (self.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = (now - internals.ts)) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && (chunkSize - maxChunkSize) > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n\n  setLength(length) {\n    this[kInternals].length = +length;\n    return this;\n  }\n}\n\nexport default AxiosTransformStream;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}